[
    {
        "id" : 1,
        "question" : "Two Sum",
        "level" : "Easy",
        "tool" : "Dictionary",
        "complexity" : "O(n)",
        "input" : "nums = [2,7,11,15], target = 9",
        "output" : "[0,1]",
        "youtube" : "https://youtu.be/oadssnyJA90"
    },
    {
        "id" : 2,
        "question" : "Valid Parentheses",
        "level" : "Easy",
        "tool" : "Dictionary, Stack",
        "complexity" : "O(n)",
        "input" : "s = \"(]\"",
        "output" : "false",
        "youtube" : "https://www.youtube.com/watch?v=WTzjTskDFMg"
    },
    {
        "id" : 3,
        "question" : "Merge Two Sorted Lists",
        "level" : "Easy",
        "tool" : "Pointer",
        "complexity" : "O(n)",
        "input" : "list1 = [1,2,4], list2 = [1,3,4]",
        "output" : "[1,1,2,3,4,4]",
        "youtube" : "https://www.youtube.com/watch?v=XIdigk956u0"
    },
    {
        "id" : 4,
        "question" : "Best Time to Buy and Sell Stock",
        "level" : "Easy",
        "tool" : "Pointer",
        "complexity" : "O(n)",
        "input" : "prices = [7,1,5,3,6,4]",
        "output" : "5",
        "youtube" : "https://www.youtube.com/watch?v=1pkOgXD63yU&t=349s"
    },
    {
        "id" : 5,
        "question" : "Valid Palindrome",
        "level" : "Easy",
        "tool" : "Pointer",
        "complexity" : "O(n)",
        "input" : "s = \"race a car\"",
        "output" : "false",
        "youtube" : "https://www.youtube.com/watch?v=XdMau9kwUvU"
    },
    {
        "id" : 6,
        "question" : "Invert Binary Tree",
        "level" : "Easy",
        "tool" : "Recursion, DFS",
        "complexity" : "O(n). Traverse every node in BST.",
        "input" : "root = [4,2,7,1,3,6,9]",
        "output" : "[4,7,2,9,6,3,1]",
        "youtube" : "https://www.youtube.com/watch?v=OnSn2XEQ4MY"
    }
]